================================
gstlal Installation Instructions
================================


.. contents:: Table of Contents


Overview
========

gstlal is a project that links together LAL and its associated libraries with 
GStreamer and so requires all of those tools to be installed, including the 
normally optional development-related components.  Once the dependencies are 
installed, the installation of gstlal itself should be very simple.  
The LDG clusters have the dependencies installed in /opt/lscsoft/gst. 
These instructions



Preparing the Filesystem
========================

The following is the filesystem layout I (Kipp) use.  Of course other 
arrangements are possible, and you are welcome to experiment, but if you have 
problems please try this arrangement before reporting problems.

The top level directory is ``local/`` in which is found a normal collection of
unix install directorys: ``bin/``, ``lib/``, etc..  The ``/path/to/local/``
will be used as the install prefix for all software components.  Note that you
probably shouldn't literally use /path/to/local as the prefix since that will
require root access.  Use something like ``/archive/home/yourusername/local``
Also in ``local/`` is a directory named ``src/``, and this is where we will
keep the source code for the software.  For reference the tree looks like this,
but do not try to make this by hand, it will be constructed for you as you
download and install software::

  local/
    bin/
    include/
    lib/
    ... and so on ...
    src/
      gst-plugins-base/
      gst-plugins-good/
      gst-python/
      gstlal/
      gstreamer/
      lalsuite/
        glue/
        lal/
        lalapps/
        lalburst/
        lalframe/
        lalmetaio/
        pylal/
        ... and so on ...

Prepare the filesystem by doing the following.  Choose where you want ``local/``
to go (I put it in my home directory, but you might prefer to be more organized 
than that), then in that directory type::

  $ mkdir local
  $ mkdir local/src

The rest of the tree will be created as software is downloaded and installed.



Preparing the Environment
=========================

Disable the system-wide lscsoft installation by doing::

  $ cd ${HOME}
  $ touch .nolscsoft

Now create the environment setup script for the software to be installed in your
home directory that links against the proper system software with::

  $ cd /path/to/local/
  $ cat >environment.sh <<_EOF_

  # NOTICE: Here is an environment script that is presented in the hope that it
  # will be useful Please do not just blindy copy it, as you may want to modify
  # some of what it does to suit your system and environment. This assumes an
  # LDG cluster environment using CentOS 5.  (like CIT)

  # These are on the cluster
  # FIXME when pylal is released maybe we can just use all of lalsuite?
  for p in libframe libmetaio gst
  do
  PATH=/opt/lscsoft/\${p}/bin:\${PATH}
  PKG_CONFIG_PATH=/opt/lscsoft/\${p}/lib64/pkgconfig:/opt/lscsoft/\${p}/lib/pkgconfig:\${PKG_CONFIG_PATH}
  PYTHONPATH=/opt/lscsoft/\${p}/lib64/python2.4/site-packages:\${PYTHONPATH}
  done

  # This is an install prefix that does not get used anywhere but this script
  # change it to something useful
  INSTALLPATH=/path/to/local

  # These are environment variables that do get exported
  PATH=\${INSTALLPATH}/bin:\${PATH}
  PKG_CONFIG_PATH=\${INSTALLPATH}/lib64/pkgconfig:\${INSTALLPATH}/lib/pkgconfig:\${PKG_CONFIG_PATH}
  PYTHONPATH=\${INSTALLPATH}/lib64/python2.4/site-packages:\${PYTHONPATH}
  GST_PLUGIN_PATH=\${INSTALLPATH}/lib/gstreamer-0.10:\${GST_PLUGIN_PATH}

  export PATH PKG_CONFIG_PATH PYTHONPATH GST_PLUGIN_PATH
  _EOF_

Once you have constructed ``environment.sh`` with those four environment variables in it::

  $ source /path/to/local/environment.sh

You will need to do this everytime you wish to use or do development work with 
the software.  It might make sense to put this in your login scripts (but 
remember you have done this, if you choose to).



(Optional) NDS Support
======================

gstlal includes an optional source element for retrieving live data from an NDS 
server. To enable NDS support, ensure that you have the NDS2 client installed 
before building gstlal. This requires you to install

 * â‰¥nds2-client-0.6.5.tar.gz

To support Kerberos authentication, you will need to make sure that your system 
has libsasl2 and the gssapi module for libsasl2. In Debian these are the packages

 * libsasl2-dev
 * libsasl2-modules-gssapi-mit

To install the NDS client library, run the following commands::

  $ wget https://www.lsc-group.phys.uwm.edu/daswg/download/software/source/nds2-client-0.6.5-src.tar.gz
  $ tar -xzf nds2-client-0.6.5-src.tar.gz
  $ pushd nds2-client-0.6.5
  $ ./configure --prefix=/path/to/local && make install
  $ popd



Downloading the Software
========================

The following will clone the gstlal and lalsuite source tree giving you read-only access::

  $ cd /path/to/local/src/
  $ git clone git://ligo-vcs.phys.uwm.edu/gstlal.git
  $ git clone git://ligo-vcs.phys.uwm.edu/lalsuite.git

*OR*, those with ligo.org credentials can obtain a read-write clone of the 
gstlal source tree by using::

  $ cd /path/to/local/src/
  $ git clone albert.einstein@ligo-vcs.phys.uwm.edu:/usr/local/git/gstlal.git
  $ git clone albert.einstein@ligo-vcs.phys.uwm.edu:/usr/local/git/lalsuite.git




Installing the Software
=======================

 1. Change to your ``src`` directory::
    
    $ cd /path/to/local/src

 2. Install the components of lalsuite in the order glue, lal, lalframe, 
    lalmetaio, lalburst, lalinspiral, lalpulsar, lalstochastic, lalapps, 
    pylal, using:
    
    * ``$ pushd lalsuite``
    
      - For C components::
        
        $ pushd directory
        $ ./00boot && ./configure --prefix=/path/to/local && make -j install
        $ popd
      
      - For Python components::
        
        $ pushd directory
        $ python setup.py install --prefix=/path/to/local
        $ popd
      
    * ``$ popd``
      
    * *do not* set any environment variables except as instructed above,
    * *do not* source any "user-env" scripts.
 
 
 3. Install gstlal with::
    
    $ pushd gstlal
    $ ./00init.sh && ./configure --prefix=/path/to/local && make -j install
    $ popd



Verifying the Installation
==========================

To check that each component is installed correctly, do the following.

.. NOTE::  Do not run these commands from inside any of the respective source 
           trees as the presence of files in those directories with names 
           matching those referred to in these commands will confuse the tests.

glue
----

  ::
  
  $ python -c "from glue import segments ; print segments.__file__"
  
  should not produce an error, and should print a filename located in the 
  ``/path/to/local/`` directory tree.


pylal
-----
  
  ::
  
  $ python -c "from pylal import datatypes ; print datatypes.__file__"
  
  should not produce an error, and should print a filename located in the 
  ``/path/to/local/`` directory tree, and::
  
  $ ldd /path/to/local/lib*/python*/site-packages/pylal/xlal/fft.so
  
  should not produce an error, and should show that ``liblal.so.0`` is provided by 
  a file located in the ``/path/to/local`` directory tree.

pygtk
-----

   ::

   $ python -c "import pygtk; pygtk.require('2.0'); import gobject; print gobject.glib_version"

   should not produce an error and should print the version corresponding to
   the version of glib in /opt/lscsoft/gst

gstreamer
---------
  
  ::
  
  $ which gst-inspect
  
  should print ``/opt/lscsoft/gst/bin/gst-inspect``, and::
  
  $ gst-inspect coreelements
  
  should indicate that the Filename is in ``/opt/lscsoft/gst/lib/...`` .


gstlal
------
  
  ::
  
  $ gst-inspect gstlal
  
  should report information on the gstlal plugin, showing a Filename in the 
  ``/path/to/local/lib/...`` tree, and there should be several elements provided
  by the plugin; and::
  
  $ ldd /path/to/local/lib/libgstlal.so
  
  should not produce an error, and should show that ``libgstbase-0.10.so.0``, 
  ``libgstreamer-0.10.so.0``, ``libgobject-2.0.so.0``, ``libgmodule-2.0.so.0``, 
  ``libgthread-2.0.so.0`` and ``libglib-2.0.so.0`` are all provided by files 
  located in the ``/opt/lscsoft/gst`` directory tree; and::
  
  $ python -c "from gstlal import pipeparts ; print pipeparts.__file__"
  
  should not produce an error, and should print a filename located in the 
  ``/path/to/local/`` directory tree.
