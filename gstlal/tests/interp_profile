#!/usr/bin/python
import sys

import gi
gi.require_version('Gst', '1.0')
from gi.repository import GObject
from gi.repository import Gst
GObject.threads_init()
Gst.init(None)

from gstlal import pipeparts
from gstlal import simplehandler
import test_common
import numpy

in_rate = 512
out_rate = 1024
num_chan = 100

opt = sys.argv[1]

GObject.threads_init()
Gst.init(None)
mainloop = GObject.MainLoop()
pipeline = Gst.Pipeline(name="gstlal_play_frames")
handler = simplehandler.Handler(mainloop, pipeline)

head = test_common.test_src(pipeline, buffer_length = 10.0, rate = in_rate, width = 32, channels = 1, test_duration = 10000.0, wave = 5, freq = 0, is_live = False, verbose = True)
head = pipeparts.mkfirbank(pipeline, head, fir_matrix = numpy.ones((num_chan,1)))
if opt == "resample":
	head = pipeparts.mkcapsfilter(pipeline, pipeparts.mkresample(pipeline, head), "audio/x-raw, format=F32LE, rate=%d" % out_rate)
if opt == "interp":
	print "Notice-- running interpolator"
	head = pipeparts.mkcapsfilter(pipeline, pipeparts.mkinterpolator(pipeline, head), "audio/x-raw, format=F32LE, rate=%d" % out_rate)
pipeparts.mkfakesink(pipeline, head)

# run
if pipeline.set_state(Gst.State.PLAYING) == Gst.StateChangeReturn.FAILURE:
	raise RuntimeError("pipeline failed to enter PLAYING state")
mainloop.run()

