#!/usr/bin/python
import sys
from ligo import segments
from glue import segmentsUtils
from glue.ligolw import ligolw
from glue.ligolw import utils
from glue.ligolw import lsctables
from glue.ligolw.utils import segments as ligolw_segments
from pylal.datatypes import LIGOTimeGPS

fname = sys.argv[1]
trim = int(sys.argv[2])

xmldoc = utils.load_filename(fname, verbose = True)

segs = ligolw_segments.segmenttable_get_by_name(xmldoc, "RESULT").contract(trim)


xmldoc = ligolw.Document()
xmldoc.appendChild(ligolw.LIGO_LW())
seg_def = lsctables.New(lsctables.SegmentDefTable)
xmldoc.childNodes[0].appendChild(seg_def)
segtab = lsctables.New(lsctables.SegmentTable)
xmldoc.childNodes[0].appendChild(segtab)

# populate the segment definer table
ifo_ids = {}
for ifo in segs.keys():
	row = seg_def.RowType()
	id = seg_def.get_next_id()
	row.ifos = ifo
	row.segment_def_id = id
	row.creator_db = None
	row.process_id = None
	row.name = "RESULT"
	row.version = None
	row.comment = None
	row.insertion_time = None
	ifo_ids[ifo] = id
	seg_def.append(row)

for ifo, segl in segs.items():
	for seg in segl:
		print seg
		row = segtab.RowType()
		row.segment_def_id = ifo_ids[ifo]
		row.segment_id = segtab.get_next_id()
		row.creator_db = None
		row.process_id = None
		row.segment_def_cdb = None
		row.set(seg)
		segtab.append(row)

utils.write_filename(xmldoc, sys.argv[3], verbose = True)

