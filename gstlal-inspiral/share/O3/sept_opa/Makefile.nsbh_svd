############################
# Template bank parameters #
############################

# The frequency at which to begin generating a template
LOW_FREQUENCY_CUTOFF = 15.0

# The frequency at which to stop generating a template
HIGH_FREQUENCY_CUTOFF = 1024

# The sample rate, note that this is usually exactly = 2 * HIGH_FREQUENCY_CUTOFF
SAMPLE_RATE = 2048

# The number of templaes that go into each sub bank.  The total number of templates in a file is given by NUM_SPLIT_TEMPLATES * NUMBANKS
NUM_SPLIT_TEMPLATES = 500

# How many effective spin bins to use.  If this is a nonspinning bank, then use
# 1.  For a fully spinning bank 20 is a good number.  In this example we have
# spin magnitudes up to 0.05 so we choose 3.
NUM_CHI_BINS = 20

# This determines how many overlap tempates are used the boundaries of each sub
# bank.  NOTE that the overlap templates are only used to help compute the SVD,
# they are discarded in the final single inspiral table.  The analysis does not
# contain duplicate templates at the end.
OVERLAP = 50

# NOTE 1000 is used in place of "infinty" it is possible to specify additiona
# approximantes. The format is (chirp mass start):approximant:(chirp mass end)
# which allows the user to specify different chirp masses for each approximant
APPROXIMANT1 = 0.00:1000:SEOBNRv4_ROM

# This determines how many sub banks go into each file.  The interpretation is
# that the number of times you specify a given integer in this list will
# determin the frequency at which than number of sub banks is put into a file.
# The order matters, it goes from lowest to highest chirp mass.  Examples:
#
# NUMBANKS = 3,4,5 
# 
# Approximately 1/3 of the files would contain 3 sub banks, 1/3 would contain 4 sub banks and 1/3 would contain 5 sub banks.  The lowest mass templates would be grouped into 3 sub banks and the highest mass templates would be grouped into 5 sub banks.
#
# NUMBANKS = 3,4,4,5
#
# Here 1/4 would have 3 sub banks, 1/2 would have 4 and 1/4 would have 5.  Again, the lowest mass templates would have three sub banks. The in-the-middle mass templates would have 4 and the highest mass templates would have 5.
#
NUMBANKS = 5,6,7

# The reference PSD
PSD = ../../banks/bns/H1L1V1-REFERENCE_PSD-1186624818-687900.xml.gz

# The template bank file that you want to split up and decompose.
BANK = ../../banks/nsbh/SBANK_COMBINED-GSTLAL_NSBH.xml.gz

# Condor information
ACCOUNTING_GROUP=ligo.dev.o3.cbc.em.gstlalonline
ACCOUNTING_USER=chad.hanna

all : bank.dag

%_split_bank.cache : $(BANK)
	mkdir -p $*_split_bank
	gstlal_bank_splitter --f-low $(LOW_FREQUENCY_CUTOFF) --group-by-chi $(NUM_CHI_BINS) --output-path $*_split_bank --approximant $(APPROXIMANT1) --output-cache $@ --overlap $(OVERLAP) --instrument $* --n $(NUM_SPLIT_TEMPLATES) --sort-by mchirp --max-f-final $(HIGH_FREQUENCY_CUTOFF) $(BANK)

%_bank.dag : %_split_bank.cache $(PSD)
	gstlal_inspiral_svd_bank_pipe --autocorrelation-length 351 --instrument $* --reference-psd $(PSD) --bank-cache $< --overlap $(OVERLAP) --flow $(LOW_FREQUENCY_CUTOFF) --output-name $@ --num-banks $(NUMBANKS) --samples-max-256 2048 --samples-min 2048 --condor-command 'accounting_group = $(ACCOUNTING_GROUP)' --condor-command 'accounting_group_user = $(ACCOUNTING_USER)'

bank.dag : H1_bank.dag L1_bank.dag V1_bank.dag
	cat $^ > bank.dag
	rm -f $^

clean :
	rm -rf *.sub* *.dag* *.cache *.sh logs gstlal_svd_bank* *split_bank*
