[condor] 
; This section points to the executables, and provides condor options
universe = vanilla
lalapps_cbc_sbank = /path/to/lalapps_cbc_sbank
lalapps_cbc_sbank_choose_mchirp_boundaries = /path/to/lalapps_cbc_sbank_choose_mchirp_boundaries

[accounting]
accounting-group = ligo.dev.o3.cbc.em.gstlalonline

[sbank]
; This section contains the parameters of the entire bank parameter
; space you wish to cover. sbank_pipe will divide the space for you.
approximant = TaylorF2
match-min = 0.97
flow = 15.0
fhigh-max = 1024
reference-psd = H1L1V1-REFERENCE_PSD-1186624818-687900.xml.gz
instrument = L1
mass1-min = 1.00
mass1-max = 2.00
mass2-min = 1.00
mass2-max = 2.00
mtotal-min = 2.00
mtotal-max = 4.00
spin1-max = 0.05
spin1-min = -0.05
spin2-max = 0.05
spin2-min = -0.05
aligned-spin =
neighborhood-param = dur
neighborhood-size = 15
checkpoint = 500
;cache-waveforms =
; please check your memory requirements before setting this option
; if jobs use too much memory, they will swap and run forever
coarse-match-df = 2.0
iterative-match-df-max= 2.0
; If you want to add precomputed banks to the workflow
;bank-seed = FILENAME[:APPROX]

[coarse-sbank]
; This section is for planning the splitting of the parameter
; space. To do so, we generate a "coarse" bank, i.e., a bank on the
; same parameter space but with a weaker convergence criteria. This
; process gives a rough measure of the density of templates the final
; bank will require. Use the max-new-templates option to prevent the job
; from running forever, but the more templates you have in the coarse
; bank, the less "over-coverage" you will incur from the bank
; splitting process. A good rule of thumb is that you want ~1000
; templates per split bank.
max-new-templates = 15000
match-min = 0.93
convergence-threshold = 1000

[split]
; This section configures the parallelization. nbanks are how many
; splits (in chirp mass) you want. You can crank it to infinity at the
; cost of overcerage.
nbanks = 15
