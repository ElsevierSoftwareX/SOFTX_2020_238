#!/usr/bin/env python
"""
Plotter for gstlal_inspiral_calc_snr
"""
import os
import sys
from optparse import OptionParser


from gstlal import plotsnr
from gstlal import svd_bank_snr

from lal.utils import CacheEntry

def parse_command_line():
	parser = OptionParser(description = __doc__)

	parser.add_option("-o", "--outdir", metavar = "directory", help = "The output directory for the SNR plot (require).")
	parser.add_option("-i", "--input", metavar = "cache", help = "The input cache containing SNR urls (require).")
	parser.add_option("-f", "--format", metavar = "file_type", help = "The format of the output plot, can only be '.png' or '.svg' (default = .svg).")
	parser.add_option("--center", metavar = "gpsSeconds", type = "float", help = "Center the plot to --center (optional).")
	parser.add_option("--width", metavar = "inch", default = 8, type = "int", help = "The output width of the figure.")
	parser.add_option("--span", metavar = "seconds", type = "float", help = "The time span around --center (optional).")
	parser.add_option("-v", "--verbose", action = "store_true", help = "Be verbose.")

	options, args = parser.parse_args()

	if options.input is None:
		raise ValueError("Missing --input.")
	if options.outdir is None:
		raise ValueError("Missing --outdir.")
	if options.center is not None and options.span is None:
		raise ValueError("--span should also be provided if --center is provided.")
	if options.span is not None and options.center is None:
		raise ValueError("--center should also be provided if --span is provided.")

	return options

options = parse_command_line()

suffix = ".png" if (options.format is None) else options.format
urls = []
description = None
segment = None
with open(options.input) as cache:
	for line in cache.readlines():
		entry = CacheEntry(line)
		urls.append(entry.url)
		if description is None and segment is None:
			description = entry.description
			segment = "-" + str(entry.segment[0]) + "-" + str(entry.segment[1] - entry.segment[0])
		else:
			assert description + segment == entry.description + "-" + str(entry.segment[0]) + "-" + str(entry.segment[1] - entry.segment[0]), "Cannot plot snrs with different segments or for different template."

# done checking file consistency, overwrite output name with customized segment
if options.center and options.span:
	segment = "-" + str(int(options.center - options.span)) + "-" + str(int(options.span * 2))

SNRs_dict = {}
for url in urls:
	SNRs_dict.update(svd_bank_snr.read_xmldoc(svd_bank_snr.read_url(url, svd_bank_snr.SNRContentHandler, verbose = options.verbose)))

for row, snrs_group in enumerate(zip(*SNRs_dict.values())):
	figure = plotsnr.plot_snr(dict(zip(SNRs_dict.keys(), zip(snrs_group))), width = options.width, center = options.center, span = options.span, verbose = options.verbose)
	if len(zip(*SNRs_dict.values())) == 1:
		figure.savefig(os.path.join(options.outdir, "%s-" % "".join(SNRs_dict.keys()) + description + segment + suffix))
	else:
		figure.savefig(os.path.join(options.outdir, "%s-" % "".join(SNRs_dict.keys()) + description + "-"+ str(row) + segment + suffix))
